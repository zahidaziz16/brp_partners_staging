<modification>
    <id>Several optimization for less database queries.</id>
    <version>1.2.6</version>
    <vqmver>2.1.6</vqmver>
    <author>ThemeBurn.com</author>

    <file name="system/startup.php">
        <operation>
            <search position="after"><![CDATA[
            error_reporting(E_ALL);
            ]]></search>
            <add><![CDATA[
            !defined('TB_OPTIMIZATIONS_MOD') && define('TB_OPTIMIZATIONS_MOD', 1.0);
            !defined('TB_OPTIMIZATIONS_COMPATIBILITY') && define('TB_OPTIMIZATIONS_COMPATIBILITY', serialize(array(
                'enable_get_categories' => array('label' => 'Enable getCategories()', 'default' => 1),
                'enable_oc_positions'   => array('label' => 'Enable OC positions', 'default' => 1)
            )));
            !defined('TB_OPTIMIZATIONS_DATABASE') && define('TB_OPTIMIZATIONS_DATABASE', serialize(array(
                'cache_db'    => 0,
                'cache_items' => array(
                    'products_sql'     => array('label' => 'Products SQL'         , 'default' => 0, 'ttl' => 5),
                    'categories_sql'   => array('label' => 'Categories SQL'       , 'default' => 1, 'ttl' => 180),
                    'information_sql'  => array('label' => 'Information pages SQL', 'default' => 0, 'ttl' => 180),
                    'manufacturer_sql' => array('label' => 'Manufacturers SQL'    , 'default' => 0, 'ttl' => 180),
                    'url_level_1'      => array('label' => 'SEO Urls SQL Level 1' , 'default' => 1, 'ttl' => 180),
                    'url_level_2'      => array('label' => 'SEO Urls SQL Level 2' , 'default' => 1, 'ttl' => 180),
                    'other_sql'        => array('label' => 'Other SQL'            , 'default' => 0, 'ttl' => 30)
                )
            )));
            ]]></add>
        </operation>
    </file>

    <file name="system/library/db.php">
        <operation>
            <search position="after"><![CDATA[
            public function query($sql
            ]]></search>
            <add><![CDATA[
            static $cache_db;

            if (null === $cache_db && class_exists('TB_Engine') && TB_Engine::hasInstance() && TB_Engine::instance()->isExtensionInstalled('oc_optimizations')) {
                $cache_db = TB_Engine::instance()->getExtension('oc_optimizations')->getModel('default')->getCache($this->driver);
            }

            if (false !== $cache_db && null !== $cache_db) {
                $result = $cache_db->getResult($sql);
	            if (null !== $result) {
		            return $result;
	            }
            }
            ]]></add>
        </operation>
    </file>

    <file name="catalog/controller/product/category.php">
        <operation>
            <search position="replace"><![CDATA[
            $results = $this->model_catalog_category->getCategories($category_id);
            ]]></search>
            <add><![CDATA[
            $disable_get_categories = false;
            if ($this->registry->has('tbEngine')) {
                $tb_system = $this->registry->get('tbEngine')->getThemeData()->system;
                if (!isset($tb_system['compatibility_enable_get_categories']) || !$tb_system['compatibility_enable_get_categories']) {
                    $results = array();
                    $disable_get_categories = true;
                }
            }
            if (!$disable_get_categories) {
                $results = $this->model_catalog_category->getCategories($category_id);
            }
            ]]></add>
        </operation>
    </file>

    <file name="catalog/controller/module/category.php">
        <operation>
            <search position="replace"><![CDATA[
            $categories = $this->model_catalog_category->getCategories(0);
            ]]></search>
            <add><![CDATA[
            $disable_get_categories = false;
            if ($this->registry->has('tbEngine')) {
                $tb_system = $this->registry->get('tbEngine')->getThemeData()->system;
                if (!isset($tb_system['compatibility_enable_get_categories']) || !$tb_system['compatibility_enable_get_categories']) {
                    $categories = array();
                    $disable_get_categories = true;
                }
            }
            if (!$disable_get_categories) {
                $categories = $this->model_catalog_category->getCategories(0);
            }
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/common/" name="column_left.php,column_right.php,content_top.php,content_bottom.php">
        <operation>
            <search position="before"><![CDATA[
            foreach ($extensions as $extension) {
            ]]></search>
            <add><![CDATA[
            $tb_layout_id = false;
            if ($this->registry->has('tbEngine')) {
                $tb_system = $this->registry->get('tbEngine')->getThemeData()->system;
                if (isset($tb_system['compatibility_enable_oc_positions']) && !$tb_system['compatibility_enable_oc_positions']) {
                    $tb_layout_id = $this->registry->get('tbEngine')->getThemeModel()->getLayoutIdByName('TB_Widgets');
                }
            }
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            foreach ($modules as $module) {
            ]]></search>
            <add><![CDATA[
            if ($tb_layout_id && $module['layout_id'] != $tb_layout_id) {
                continue;
            }
            ]]></add>
        </operation>
    </file>

    <file name="catalog/controller/common/header.php">
        <operation>
            <search position="replace"><![CDATA[
            $categories = $this->model_catalog_category->getCategories(0);
            ]]></search>
            <add><![CDATA[
            if ($this->registry->has('tbEngine')) {
                $categories = array();
            } else {
                $categories = $this->model_catalog_category->getCategories(0);
            }
            ]]></add>
        </operation>
    </file>

    <file name="catalog/model/catalog/information.php">
        <operation>
            <search position="after"><![CDATA[
            public function getInformationLayoutId($information_id) {
            ]]></search>
            <add><![CDATA[
            static $layouts = array();

            if (isset($layouts[$information_id])) {
                return $layouts[$information_id];
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if ($query->num_rows) {
            ]]></search>
            <add><![CDATA[
            $layouts[$information_id] = $query->num_rows ? $query->row['layout_id'] : false;
            ]]></add>
        </operation>
    </file>

    <file name="catalog/model/design/layout.php">
        <operation>
            <search position="after"><![CDATA[
            public function getLayout($route) {
            ]]></search>
            <add><![CDATA[
            static $layouts = array();

            if (isset($layouts[$route])) {
                return $layouts[$route];
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if ($query->num_rows) {
            ]]></search>
            <add><![CDATA[
            $layouts[$route] = $query->num_rows ? $query->row['layout_id'] : false;
            ]]></add>
        </operation>
    </file>

    <file name="catalog/model/setting/extension.php">
        <operation>
            <search position="after"><![CDATA[
            function getExtensions($type) {
            ]]></search>
            <add><![CDATA[
            static $extensions = array();

            if (isset($extensions[$type])) {
                return $extensions[$type];
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            return $query->rows;
            ]]></search>
            <add><![CDATA[
            $extensions[$type] = $query->rows;
            ]]></add>
        </operation>
    </file>

    <file name="catalog/model/catalog/information.php">
        <operation>
            <search position="after"><![CDATA[
            public function getInformations() {
            ]]></search>
            <add><![CDATA[
            static $informations = null;

            if (null !== $informations) {
                return $informations;
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            return $query->rows;
            ]]></search>
            <add><![CDATA[
            $informations = $query->rows;
            ]]></add>
        </operation>
    </file>

    <file name="system/library/tax.php">

        <operation>
            <search position="after"><![CDATA[
            $tax_rates = array();
            ]]></search>
            <add><![CDATA[
            static $tax_rates_result = array();
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[
            if ($this->shipping_address) {
            ]]></search>
            <add><![CDATA[
            if (!isset($tax_rates_result[$tax_class_id])) {
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[
            $tax_rate_data = array();
            ]]></search>
            <add><![CDATA[
                $tax_rates_result[$tax_class_id] = $tax_rates;
            } else {
                $tax_rates = $tax_rates_result[$tax_class_id];
            }
            ]]></add>
        </operation>

    </file>

    <file name="catalog/controller/common/seo_url.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerCommonSeoUrl extends Controller {
            ]]></search>
            <add><![CDATA[
            class DbDecorator
            {
                private $db;
                private static $results = array();
                private static $escaped = array();

                public function __construct($db)
                {
                    $this->db = $db;
                }

                public function query($sql)
                {
                    $h = md5($sql);
                    if (!isset(self::$results[$h])) {
                        self::$results[$h] = $this->db->query($sql);
                    }

                    return self::$results[$h];
                }

                public function escape($string)
                {
                    if (!isset(self::$escaped[$string])) {
                        self::$escaped[$string] = $this->db->escape($string);
                    }

                    return self::$escaped[$string];
                }
            }
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            class ControllerCommonSeoUrl extends Controller {
            ]]></search>
            <add><![CDATA[
            private $db;

            public function __construct($registry)
            {
                parent::__construct($registry);
                if ($registry->get('tbEngine')) {
                    $theme_settings = TB_Engine::instance()->getThemeModel()->getSettings();
                    if (!isset($theme_settings['system']['cache_url_level_1']) || $theme_settings['system']['cache_url_level_1']) {
                        $this->db = new DbDecorator($registry->get('db'));
                    }
                }

                if (null === $this->db) {
                    $this->db = $registry->get('db');
                }
            }
            ]]></add>
        </operation>
    </file>

    <file name="system/library/url.php">
        <operation>
            <search position="before"><![CDATA[
            private $url;
            ]]></search>
            <add><![CDATA[
            private static $url_map = null;
            public static $current_language_id = null;
            public static $enable_cache = null;
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            foreach ($this->rewrite as $rewrite) {
            ]]></search>
            <add><![CDATA[
            if (self::$enable_cache) {
                if (null === self::$current_language_id) {
                    self::$current_language_id = TB_Engine::ocConfig('config_language_id');
                }
                if (null === self::$url_map || self::$current_language_id != TB_Engine::ocConfig('config_language_id')) {
                    $cache_key = 'url_map_' . TB_Engine::ocConfig('config_store_id') . '_' . TB_Engine::ocConfig('config_language_id');
                    self::$url_map = (array) TB_Engine::OcRegistry()->get('tbEngine')->getCacheVar($cache_key, null, array(), null, true);
                    TB_Engine::OcRegistry()->set('url_map', self::$url_map);
                    TB_Engine::OcRegistry()->set('save_url_map', false);
                }
                if (null !== self::$url_map && isset(self::$url_map[$url])) {
                    return self::$url_map[$url];
                }
            }
            $original_url = $url;
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            return $url;
            ]]></search>
            <add><![CDATA[
            if (self::$enable_cache && null !== self::$url_map && $original_url != $url) {
                self::$url_map[$original_url] = $url;
                TB_Engine::OcRegistry()->set('url_map', self::$url_map);
                TB_Engine::OcRegistry()->set('save_url_map', true);
            }
            ]]></add>
        </operation>
    </file>

    <file name="catalog/controller/product/category.php">
        <operation>
            <search position="before"><![CDATA[
            $this->data['breadcrumbs'] = array();
            ]]></search>
            <add><![CDATA[
            $enable_url_cache = false;
            if (!defined('HTTP_CATALOG') && class_exists('TB_Engine') && TB_Engine::ocConfig('config_seo_url')) {
                $theme_settings = TB_Engine::instance()->getThemeModel()->getSettings();
                $enable_url_cache = !isset($theme_settings['system']['cache_url_level_2']) || $theme_settings['system']['cache_url_level_2'];
                $category_seo_url = $this->url->link('product/category', 'path=' . (isset($this->request->get['path']) ? $this->request->get['path'] : 0));
            };
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=p.sort_order&order=ASC' . $url)
            ]]></search>
            <add><![CDATA[
            'href'  => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=p.sort_order&order=ASC' . $url) : $category_seo_url . '?sort=p.sort_order&amp;order=ASC' . $url
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=pd.name&order=ASC' . $url)
            ]]></search>
            <add><![CDATA[
            'href'  => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=pd.name&order=ASC' . $url) : $category_seo_url . '?sort=pd.name&amp;order=ASC' . $url
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=pd.name&order=DESC' . $url)
            ]]></search>
            <add><![CDATA[
            'href'  => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=pd.name&order=DESC' . $url) : $category_seo_url . '?sort=pd.name&amp;order=DESC' . $url
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=p.price&order=ASC' . $url)
            ]]></search>
            <add><![CDATA[
            'href'  => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=p.price&order=ASC' . $url) : $category_seo_url . '?sort=p.price&amp;order=ASC' . $url
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=p.price&order=DESC' . $url)
            ]]></search>
            <add><![CDATA[
            'href'  => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=p.price&order=DESC' . $url) : $category_seo_url . '?sort=p.price&amp;order=DESC' . $url
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=rating&order=DESC' . $url)
            ]]></search>
            <add><![CDATA[
            'href'  => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=rating&order=DESC' . $url) : $category_seo_url . '?sort=rating&amp;order=DESC' . $url
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=rating&order=ASC' . $url)
            ]]></search>
            <add><![CDATA[
            'href'  => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=rating&order=ASC' . $url) : $category_seo_url . '?sort=rating&amp;order=ASC' . $url
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=p.model&order=ASC' . $url)
            ]]></search>
            <add><![CDATA[
            'href'  => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=p.model&order=ASC' . $url) : $category_seo_url . '?sort=p.model&amp;order=ASC' . $url
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=p.model&order=DESC' . $url)
            ]]></search>
            <add><![CDATA[
            'href'  => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=p.model&order=DESC' . $url) : $category_seo_url . '?sort=p.model&amp;order=DESC' . $url
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url . '&limit=' . $value)
            ]]></search>
            <add><![CDATA[
            'href'  => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url . '&limit=' . $value) : $category_seo_url . str_replace('&', '&amp;', $url) . '&amp;limit=' . $value
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $pagination->url = $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url . '&page={page}');
            ]]></search>
            <add><![CDATA[
            $pagination->url = !$enable_url_cache ? $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url . '&page={page}') : $this->url->link('product/category', 'path=' . $this->request->get['path']) . $url . '&amp;page={page}';
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'        => $this->url->link('product/product', 'path=' . $this->request->get['path'] . '&product_id=' . $result['product_id'] . $url)
            ]]></search>
            <add><![CDATA[
            'href'        => !$enable_url_cache ? $this->url->link('product/product', 'path=' . $this->request->get['path'] . '&product_id=' . $result['product_id'] . $url) : $this->url->link('product/product', 'path=' . $this->request->get['path'] . '&product_id=' . $result['product_id']) . $url
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            'href'      => $this->url->link('product/category', 'path=' . $path . $url),
            ]]></search>
            <add><![CDATA[
            'href'        => !$enable_url_cache ? $this->url->link('product/category', 'path=' . $path . $url) : $this->url->link('product/category', 'path=' . $path) . $url,
            ]]></add>
        </operation>
    </file>

    <file name="catalog/model/catalog/product.php">
        <operation>
            <search position="before"><![CDATA[
            public function getProduct($product_id) {
            ]]></search>
            <add><![CDATA[
            public function getProductsByIds($product_ids) {
                if ($this->customer->isLogged()) {
                    $customer_group_id = $this->customer->getCustomerGroupId();
                } else {
                    $customer_group_id = $this->config->get('config_customer_group_id');
                }

                $query = $this->db->query("SELECT DISTINCT *, pd.name AS name, p.image, m.name AS manufacturer, (SELECT price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$customer_group_id . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1) AS discount, (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$customer_group_id . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special, (SELECT points FROM " . DB_PREFIX . "product_reward pr WHERE pr.product_id = p.product_id AND customer_group_id = '" . (int)$customer_group_id . "') AS reward, (SELECT ss.name FROM " . DB_PREFIX . "stock_status ss WHERE ss.stock_status_id = p.stock_status_id AND ss.language_id = '" . (int)$this->config->get('config_language_id') . "') AS stock_status, (SELECT wcd.unit FROM " . DB_PREFIX . "weight_class_description wcd WHERE p.weight_class_id = wcd.weight_class_id AND wcd.language_id = '" . (int)$this->config->get('config_language_id') . "') AS weight_class, (SELECT lcd.unit FROM " . DB_PREFIX . "length_class_description lcd WHERE p.length_class_id = lcd.length_class_id AND lcd.language_id = '" . (int)$this->config->get('config_language_id') . "') AS length_class, (SELECT AVG(rating) AS total FROM " . DB_PREFIX . "review r1 WHERE r1.product_id = p.product_id AND r1.status = '1' GROUP BY r1.product_id) AS rating, (SELECT COUNT(*) AS total FROM " . DB_PREFIX . "review r2 WHERE r2.product_id = p.product_id AND r2.status = '1' GROUP BY r2.product_id) AS reviews, p.sort_order FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) LEFT JOIN " . DB_PREFIX . "manufacturer m ON (p.manufacturer_id = m.manufacturer_id) WHERE p.product_id IN (" . implode(',', (array) $product_ids) . ") AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'");

                $result = array();
                foreach ($query->rows as $row) {
                    $result[$row['product_id']] = array(
                        'product_id'       => $row['product_id'],
                        'name'             => $row['name'],
                        'description'      => $row['description'],
                        'meta_description' => $row['meta_description'],
                        'meta_keyword'     => $row['meta_keyword'],
                        'tag'              => $row['tag'],
                        'model'            => $row['model'],
                        'sku'              => $row['sku'],
                        'upc'              => $row['upc'],
                        'ean'              => $row['ean'],
                        'jan'              => $row['jan'],
                        'isbn'             => $row['isbn'],
                        'mpn'              => $row['mpn'],
                        'location'         => $row['location'],
                        'quantity'         => $row['quantity'],
                        'stock_status'     => $row['stock_status'],
                        'image'            => $row['image'],
                        'manufacturer_id'  => $row['manufacturer_id'],
                        'manufacturer'     => $row['manufacturer'],
                        'price'            => ($row['discount'] ? $row['discount'] : $row['price']),
                        'special'          => $row['special'],
                        'reward'           => $row['reward'],
                        'points'           => $row['points'],
                        'tax_class_id'     => $row['tax_class_id'],
                        'date_available'   => $row['date_available'],
                        'weight'           => $row['weight'],
                        'weight_class_id'  => $row['weight_class_id'],
                        'length'           => $row['length'],
                        'width'            => $row['width'],
                        'height'           => $row['height'],
                        'length_class_id'  => $row['length_class_id'],
                        'subtract'         => $row['subtract'],
                        'rating'           => round($row['rating']),
                        'reviews'          => $row['reviews'] ? $row['reviews'] : 0,
                        'minimum'          => $row['minimum'],
                        'sort_order'       => $row['sort_order'],
                        'status'           => $row['status'],
                        'date_added'       => $row['date_added'],
                        'date_modified'    => $row['date_modified'],
                        'viewed'           => $row['viewed']
                    );
                }

                return $result;
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            $product_data[$result['product_id']] = $this->getProduct($result['product_id']);
            ]]></search>
            <add><![CDATA[
            $product_ids = array();
            ]]></add>
        </operation>
        <operation>
            <search position="after" offset="1"><![CDATA[
            $product_data[$result['product_id']] = $this->getProduct($result['product_id']);
            ]]></search>
            <add><![CDATA[
            if (!empty($product_ids)) {
                $products = $this->getProductsByIds($product_ids);
                foreach ($product_ids as $id) {
                    $product_data[$id] = $products[$id];
                }
            }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $product_data[$result['product_id']] = $this->getProduct($result['product_id']);
            ]]></search>
            <add><![CDATA[
            $product_ids[] = $result['product_id'];
            ]]></add>
        </operation>
    </file>

    <file name="system/library/response.php">
        <operation>
            <search position="before"><![CDATA[
            echo $output;
            ]]></search>
            <add><![CDATA[
            if (class_exists('TB_Engine') && TB_Engine::OcRegistry()->get('save_url_map')) {
                $config = TB_Engine::ocConfig();
                $cache_key = 'url_map_' . $config->get('config_store_id') . '_' . $config->get('config_language_id');
                $url_map = TB_Engine::OcRegistry()->get('url_map');
                TB_Engine::OcRegistry()->get('tbEngine')->setCacheVar($cache_key, $url_map);
            }
            ]]></add>
        </operation>
    </file>

</modification>